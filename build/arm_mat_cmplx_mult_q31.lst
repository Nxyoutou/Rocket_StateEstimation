ARM GAS  /tmp/ccXybvFx.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_mat_cmplx_mult_q31.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_mat_cmplx_mult_q31,"ax",%progbits
  17              		.align	1
  18              		.global	arm_mat_cmplx_mult_q31
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_mat_cmplx_mult_q31:
  26              	.LVL0:
  27              	.LFB145:
  28              		.file 1 "Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c"
   1:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /* ----------------------------------------------------------------------
   2:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Project:      CMSIS DSP Library
   3:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Title:        arm_mat_cmplx_mult_q31.c
   4:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Description:  Floating-point matrix multiplication
   5:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
   6:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * $Date:        18. March 2019
   7:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * $Revision:    V1.6.0
   8:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
   9:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Target Processor: Cortex-M cores
  10:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * -------------------------------------------------------------------- */
  11:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /*
  12:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  14:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  16:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * not use this file except in compliance with the License.
  18:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * You may obtain a copy of the License at
  19:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  20:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *
  22:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * See the License for the specific language governing permissions and
  26:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * limitations under the License.
  27:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  28:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  29:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #include "arm_math.h"
  30:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
ARM GAS  /tmp/ccXybvFx.s 			page 2


  31:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**
  32:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @ingroup groupMatrix
  33:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  34:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  35:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**
  36:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @addtogroup CmplxMatrixMult
  37:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @{
  38:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  39:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  40:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**
  41:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @brief         Q31 Complex matrix multiplication.
  42:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @param[in]     pSrcA      points to first input complex matrix structure
  43:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @param[in]     pSrcB      points to second input complex matrix structure
  44:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @param[out]    pDst       points to output complex matrix structure
  45:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @return        execution status
  46:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    - \ref ARM_MATH_SUCCESS       : Operation successful
  47:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    - \ref ARM_MATH_SIZE_MISMATCH : Matrix size check failed
  48:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  49:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   @par           Scaling and Overflow Behavior
  50:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    The function is implemented using an internal 64-bit accumulator.
  51:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    The accumulator has a 2.62 format and maintains full precision of the intermedia
  52:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    multiplication results but provides only a single guard bit. There is no saturat
  53:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    on intermediate additions. Thus, if the accumulator overflows it wraps around an
  54:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    distorts the result. The input signals should be scaled down to avoid intermedia
  55:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    overflows. The input is thus scaled down by log2(numColsA) bits
  56:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    to avoid overflows, as a total of numColsA additions are performed internally.
  57:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****                    The 2.62 accumulator is right shifted by 31 bits and saturated to 1.31 format to
  58:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  59:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  60:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** arm_status arm_mat_cmplx_mult_q31(
  61:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcA,
  62:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcB,
  63:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         arm_matrix_instance_q31 * pDst)
  64:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** {
  29              		.loc 1 64 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 48
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 64 1 is_stmt 0 view .LVU1
  34 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 36
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 8DB0     		sub	sp, sp, #52
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 88
  49 0006 0346     		mov	r3, r0
  50 0008 0891     		str	r1, [sp, #32]
  65:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pIn1 = pSrcA->pData;                    /* Input data matrix pointer A */
ARM GAS  /tmp/ccXybvFx.s 			page 3


  51              		.loc 1 65 3 is_stmt 1 view .LVU2
  52              		.loc 1 65 10 is_stmt 0 view .LVU3
  53 000a 4068     		ldr	r0, [r0, #4]
  54              	.LVL1:
  55              		.loc 1 65 10 view .LVU4
  56 000c 0690     		str	r0, [sp, #24]
  57              	.LVL2:
  66:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pIn2 = pSrcB->pData;                    /* Input data matrix pointer B */
  58              		.loc 1 66 3 is_stmt 1 view .LVU5
  67:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pInA = pSrcA->pData;                    /* Input data matrix pointer A */
  59              		.loc 1 67 3 view .LVU6
  68:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pOut = pDst->pData;                     /* Output data matrix pointer */
  60              		.loc 1 68 3 view .LVU7
  61              		.loc 1 68 10 is_stmt 0 view .LVU8
  62 000e 5268     		ldr	r2, [r2, #4]
  63              	.LVL3:
  64              		.loc 1 68 10 view .LVU9
  65 0010 0B92     		str	r2, [sp, #44]
  66              	.LVL4:
  69:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  67              		.loc 1 69 3 is_stmt 1 view .LVU10
  70:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numRowsA = pSrcA->numRows;            /* Number of rows of input matrix A */
  68              		.loc 1 70 3 view .LVU11
  71:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  69              		.loc 1 71 3 view .LVU12
  70              		.loc 1 71 12 is_stmt 0 view .LVU13
  71 0012 4A88     		ldrh	r2, [r1, #2]
  72              	.LVL5:
  73              		.loc 1 71 12 view .LVU14
  74 0014 0292     		str	r2, [sp, #8]
  75              	.LVL6:
  72:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  76              		.loc 1 72 3 is_stmt 1 view .LVU15
  77              		.loc 1 72 12 is_stmt 0 view .LVU16
  78 0016 5A88     		ldrh	r2, [r3, #2]
  79 0018 0792     		str	r2, [sp, #28]
  80              	.LVL7:
  73:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q63_t sumReal, sumImag;                        /* Accumulator */
  81              		.loc 1 73 3 is_stmt 1 view .LVU17
  74:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t a1, b1, c1, d1;
  82              		.loc 1 74 3 view .LVU18
  75:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint32_t col, i = 0U, j, row = numRowsA, colCnt; /* loop counters */
  83              		.loc 1 75 3 view .LVU19
  84              		.loc 1 75 28 is_stmt 0 view .LVU20
  85 001a 1B88     		ldrh	r3, [r3]
  86              	.LVL8:
  87              		.loc 1 75 28 view .LVU21
  88 001c 0A93     		str	r3, [sp, #40]
  89              	.LVL9:
  90              		.loc 1 75 17 view .LVU22
  91 001e 0023     		movs	r3, #0
  92              	.LVL10:
  93              		.loc 1 75 17 view .LVU23
  94 0020 0993     		str	r3, [sp, #36]
  95 0022 89E0     		b	.L7
  96              	.LVL11:
  97              	.L3:
ARM GAS  /tmp/ccXybvFx.s 			page 4


  76:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
  77:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  78:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
  79:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t a0, b0, c0, d0;
  80:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #endif
  81:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  82:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
  83:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  84:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   /* Check for matrix mismatch condition */
  85:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
  86:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       (pSrcA->numRows != pDst->numRows)  ||
  87:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       (pSrcB->numCols != pDst->numCols)    )
  88:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   {
  89:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  90:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
  91:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   }
  92:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   else
  93:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  94:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
  95:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  96:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   {
  97:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
  98:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* row loop */
  99:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     do
 100:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     {
 101:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Output pointer is set to starting address of the row being processed */
 102:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       px = pOut + 2 * i;
 103:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 104:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* For every row wise process, the column loop counter is to be initiated */
 105:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       col = numColsB;
 106:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 107:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* For every row wise process, the pIn2 pointer is set
 108:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****        ** to the starting address of the pSrcB data */
 109:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       pIn2 = pSrcB->pData;
 110:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 111:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       j = 0U;
 112:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 113:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* column loop */
 114:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       do
 115:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       {
 116:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 117:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumReal = 0.0;
 118:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumImag = 0.0;
 119:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 120:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Initiate pointer pIn1 to point to starting address of column being processed */
 121:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         pIn1 = pInA;
 122:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 123:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 124:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 125:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 126:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         colCnt = numColsA >> 2U;
 127:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 128:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* matrix multiplication */
 129:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         while (colCnt > 0U)
 130:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 131:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 132:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading real part of complex matrix A */
ARM GAS  /tmp/ccXybvFx.s 			page 5


 133:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a0 = *pIn1;
 134:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 135:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading real part of complex matrix B */
 136:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c0 = *pIn2;
 137:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 138:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading imaginary part of complex matrix A */
 139:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b0 = *(pIn1 + 1U);
 140:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 141:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading imaginary part of complex matrix B */
 142:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d0 = *(pIn2 + 1U);
 143:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 144:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 145:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal += (q63_t) a0 * c0;
 146:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b0 * c0;
 147:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 148:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 149:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2U;
 150:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 151:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 152:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 153:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal -= (q63_t) b0 * d0;
 154:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a0 * d0;
 155:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 156:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 157:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 158:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* read real and imag values from pSrcA and pSrcB buffer */
 159:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *(pIn1     );
 160:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *(pIn2     );
 161:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1U);
 162:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1U);
 163:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 164:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 165:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal += (q63_t) a1 * c1;
 166:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b1 * c1;
 167:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 168:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 169:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2U;
 170:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 171:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 172:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 173:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal -= (q63_t) b1 * d1;
 174:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a1 * d1;
 175:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 176:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a0 = *(pIn1     );
 177:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c0 = *(pIn2     );
 178:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b0 = *(pIn1 + 1U);
 179:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d0 = *(pIn2 + 1U);
 180:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 181:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 182:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal += (q63_t) a0 * c0;
 183:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b0 * c0;
 184:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 185:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 186:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2U;
 187:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 188:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 189:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
ARM GAS  /tmp/ccXybvFx.s 			page 6


 190:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal -= (q63_t) b0 * d0;
 191:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a0 * d0;
 192:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 193:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 194:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 195:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *(pIn1     );
 196:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *(pIn2     );
 197:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1U);
 198:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1U);
 199:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 200:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 201:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal += (q63_t) a1 * c1;
 202:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b1 * c1;
 203:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 204:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 205:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2U;
 206:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 207:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 208:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 209:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal -= (q63_t) b1 * d1;
 210:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a1 * d1;
 211:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 212:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Decrement loop count */
 213:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           colCnt--;
 214:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         }
 215:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 216:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* If the columns of pSrcA is not a multiple of 4, compute any remaining MACs here.
 217:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****          ** No loop unrolling is used. */
 218:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         colCnt = numColsA % 0x4U;
 219:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 220:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #else
 221:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 222:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Initialize blkCnt with number of samples */
 223:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         colCnt = numColsA;
 224:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 225:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 226:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 227:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         while (colCnt > 0U)
 228:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 229:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 230:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *(pIn1     );
  98              		.loc 1 230 11 is_stmt 1 view .LVU24
  99              		.loc 1 230 14 is_stmt 0 view .LVU25
 100 0024 D8F80010 		ldr	r1, [r8]
 101              	.LVL12:
 231:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *(pIn2     );
 102              		.loc 1 231 11 is_stmt 1 view .LVU26
 103              		.loc 1 231 14 is_stmt 0 view .LVU27
 104 0028 D9F80030 		ldr	r3, [r9]
 105              	.LVL13:
 232:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1U);
 106              		.loc 1 232 11 is_stmt 1 view .LVU28
 107              		.loc 1 232 14 is_stmt 0 view .LVU29
 108 002c D8F80400 		ldr	r0, [r8, #4]
 109              	.LVL14:
 233:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1U);
 110              		.loc 1 233 11 is_stmt 1 view .LVU30
ARM GAS  /tmp/ccXybvFx.s 			page 7


 111              		.loc 1 233 14 is_stmt 0 view .LVU31
 112 0030 D9F80440 		ldr	r4, [r9, #4]
 113              	.LVL15:
 234:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 235:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 236:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal += (q63_t) a1 * c1;
 114              		.loc 1 236 11 is_stmt 1 view .LVU32
 115              		.loc 1 236 22 is_stmt 0 view .LVU33
 116 0034 4FEAE17A 		asr	r10, r1, #31
 117              		.loc 1 236 33 view .LVU34
 118 0038 4FEAE37B 		asr	fp, r3, #31
 119 003c 01FB0BF6 		mul	r6, r1, fp
 120 0040 03FB0A66 		mla	r6, r3, r10, r6
 121 0044 3246     		mov	r2, r6
 122 0046 A1FB03E6 		umull	lr, r6, r1, r3
 123 004a 1644     		add	r6, r6, r2
 124              		.loc 1 236 19 view .LVU35
 125 004c 1EEB0707 		adds	r7, lr, r7
 126              	.LVL16:
 127              		.loc 1 236 19 view .LVU36
 128 0050 46EB0C06 		adc	r6, r6, ip
 129              	.LVL17:
 237:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) b1 * c1;
 130              		.loc 1 237 11 is_stmt 1 view .LVU37
 131              		.loc 1 237 22 is_stmt 0 view .LVU38
 132 0054 4FEAE07C 		asr	ip, r0, #31
 133              		.loc 1 237 33 view .LVU39
 134 0058 03FB0CFE 		mul	lr, r3, ip
 135 005c 00FB0BEB 		mla	fp, r0, fp, lr
 136 0060 A3FB00E3 		umull	lr, r3, r3, r0
 137              	.LVL18:
 138              		.loc 1 237 33 view .LVU40
 139 0064 9B44     		add	fp, fp, r3
 140              		.loc 1 237 19 view .LVU41
 141 0066 1EEB0505 		adds	r5, lr, r5
 142              	.LVL19:
 143              		.loc 1 237 19 view .LVU42
 144 006a 019B     		ldr	r3, [sp, #4]
 145 006c 4BEB0302 		adc	r2, fp, r3
 146              	.LVL20:
 238:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 239:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 240:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2U;
 147              		.loc 1 240 11 is_stmt 1 view .LVU43
 148              		.loc 1 240 16 is_stmt 0 view .LVU44
 149 0070 08F10808 		add	r8, r8, #8
 150              	.LVL21:
 241:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 151              		.loc 1 241 11 is_stmt 1 view .LVU45
 152              		.loc 1 241 16 is_stmt 0 view .LVU46
 153 0074 029B     		ldr	r3, [sp, #8]
 154 0076 09EBC309 		add	r9, r9, r3, lsl #3
 155              	.LVL22:
 242:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 243:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 244:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal -= (q63_t) b1 * d1;
 156              		.loc 1 244 11 is_stmt 1 view .LVU47
ARM GAS  /tmp/ccXybvFx.s 			page 8


 157              		.loc 1 244 33 is_stmt 0 view .LVU48
 158 007a E317     		asrs	r3, r4, #31
 159 007c 00FB03FE 		mul	lr, r0, r3
 160 0080 04FB0CEC 		mla	ip, r4, ip, lr
 161 0084 A0FB04E0 		umull	lr, r0, r0, r4
 162              	.LVL23:
 163              		.loc 1 244 33 view .LVU49
 164 0088 8444     		add	ip, ip, r0
 165              		.loc 1 244 19 view .LVU50
 166 008a B7EB0E07 		subs	r7, r7, lr
 167              	.LVL24:
 168              		.loc 1 244 19 view .LVU51
 169 008e 66EB0C0C 		sbc	ip, r6, ip
 170              	.LVL25:
 245:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag += (q63_t) a1 * d1;
 171              		.loc 1 245 11 is_stmt 1 view .LVU52
 172              		.loc 1 245 33 is_stmt 0 view .LVU53
 173 0092 01FB03F3 		mul	r3, r1, r3
 174 0096 04FB0A3A 		mla	r10, r4, r10, r3
 175 009a A1FB0414 		umull	r1, r4, r1, r4
 176              	.LVL26:
 177              		.loc 1 245 33 view .LVU54
 178 009e 5444     		add	r4, r4, r10
 179              		.loc 1 245 19 view .LVU55
 180 00a0 4D19     		adds	r5, r1, r5
 181              	.LVL27:
 182              		.loc 1 245 19 view .LVU56
 183 00a2 44EB0203 		adc	r3, r4, r2
 184 00a6 0193     		str	r3, [sp, #4]
 185              	.LVL28:
 246:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 247:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Decrement loop counter */
 248:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           colCnt--;
 186              		.loc 1 248 11 is_stmt 1 view .LVU57
 187              		.loc 1 248 17 is_stmt 0 view .LVU58
 188 00a8 009B     		ldr	r3, [sp]
 189              	.LVL29:
 190              		.loc 1 248 17 view .LVU59
 191 00aa 013B     		subs	r3, r3, #1
 192 00ac 0093     		str	r3, [sp]
 193              	.LVL30:
 194              	.L2:
 227:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 195              		.loc 1 227 15 is_stmt 1 view .LVU60
 196 00ae 009B     		ldr	r3, [sp]
 197 00b0 002B     		cmp	r3, #0
 198 00b2 B7D1     		bne	.L3
 249:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         }
 250:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 251:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Store result in destination buffer */
 252:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumReal >> 31);
 199              		.loc 1 252 25 is_stmt 0 view .LVU61
 200 00b4 019A     		ldr	r2, [sp, #4]
 201              		.loc 1 252 9 is_stmt 1 view .LVU62
 202              		.loc 1 252 25 is_stmt 0 view .LVU63
 203 00b6 FF0F     		lsrs	r7, r7, #31
 204              	.LVL31:
ARM GAS  /tmp/ccXybvFx.s 			page 9


 205              		.loc 1 252 25 view .LVU64
 206 00b8 47EA4C07 		orr	r7, r7, ip, lsl #1
 207              	.LVL32:
 208              	.LBB6:
 209              	.LBI6:
 210              		.file 2 "Drivers/CMSIS/DSP/Include/arm_math.h"
   1:Drivers/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:Drivers/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:Drivers/CMSIS/DSP/Include/arm_math.h **** /*
   8:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
  10:Drivers/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
  12:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
  16:Drivers/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
  18:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
  24:Drivers/CMSIS/DSP/Include/arm_math.h **** 
  25:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
  26:Drivers/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  28:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  31:Drivers/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:Drivers/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  34:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  46:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:Drivers/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  49:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
ARM GAS  /tmp/ccXybvFx.s 			page 10


  52:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  73:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:Drivers/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  77:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  78:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:Drivers/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  81:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  83:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  86:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  89:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  92:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  95:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  96:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  98:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 101:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 103:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 105:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 107:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
ARM GAS  /tmp/ccXybvFx.s 			page 11


 109:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 111:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 113:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 115:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 117:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 119:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 121:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:Drivers/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:Drivers/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 125:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 127:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:Drivers/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:Drivers/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 131:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:Drivers/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:Drivers/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 135:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 146:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 151:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 152:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 153:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 154:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 156:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 157:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 158:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:Drivers/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:Drivers/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:Drivers/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:Drivers/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 164:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 165:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccXybvFx.s 			page 12


 166:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 167:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:Drivers/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:Drivers/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:Drivers/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:Drivers/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:Drivers/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:Drivers/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 175:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 176:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 177:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 179:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 180:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 181:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 183:Drivers/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:Drivers/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:Drivers/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:Drivers/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:Drivers/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:Drivers/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:Drivers/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:Drivers/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:Drivers/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 198:Drivers/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:Drivers/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:Drivers/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:Drivers/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 206:Drivers/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:Drivers/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:Drivers/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:Drivers/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:Drivers/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 213:Drivers/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:Drivers/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:Drivers/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:Drivers/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
ARM GAS  /tmp/ccXybvFx.s 			page 13


 223:Drivers/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:Drivers/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:Drivers/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 227:Drivers/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:Drivers/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:Drivers/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:Drivers/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:Drivers/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:Drivers/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:Drivers/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:Drivers/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:Drivers/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:Drivers/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:Drivers/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:Drivers/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 250:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 251:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 252:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 254:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 255:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 256:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 258:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 259:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 260:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 262:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 263:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 264:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 266:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 267:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 268:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:Drivers/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:Drivers/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 273:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 274:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 275:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 277:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 278:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 279:Drivers/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
ARM GAS  /tmp/ccXybvFx.s 			page 14


 280:Drivers/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 282:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:Drivers/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 285:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 287:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:Drivers/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:Drivers/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:Drivers/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:Drivers/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 293:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 295:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 297:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 299:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 301:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 303:Drivers/CMSIS/DSP/Include/arm_math.h **** #else
 304:Drivers/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 306:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 307:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 308:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:Drivers/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:Drivers/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:Drivers/CMSIS/DSP/Include/arm_math.h **** #else
 312:Drivers/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:Drivers/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:Drivers/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:Drivers/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:Drivers/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:Drivers/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:Drivers/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 320:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 321:Drivers/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:Drivers/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:Drivers/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 325:Drivers/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:Drivers/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 329:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 330:Drivers/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:Drivers/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 333:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 334:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 335:Drivers/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:Drivers/CMSIS/DSP/Include/arm_math.h **** extern "C"
ARM GAS  /tmp/ccXybvFx.s 			page 15


 337:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 338:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 339:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 340:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 341:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 342:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 344:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 345:Drivers/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:Drivers/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:Drivers/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:Drivers/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 351:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 352:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 353:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 355:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 356:Drivers/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:Drivers/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:Drivers/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:Drivers/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:Drivers/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:Drivers/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 363:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 364:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 366:Drivers/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:Drivers/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:Drivers/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 370:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 371:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 372:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 374:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 375:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 377:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 386:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 387:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 389:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 391:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 392:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  /tmp/ccXybvFx.s 			page 16


 394:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 396:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 397:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 399:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 401:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 402:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 404:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 406:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 407:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 409:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 411:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 412:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 414:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 416:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 417:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 418:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:Drivers/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 421:Drivers/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:Drivers/CMSIS/DSP/Include/arm_math.h **** #else
 438:Drivers/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 440:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 441:Drivers/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:Drivers/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:Drivers/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:Drivers/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 446:Drivers/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 448:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 449:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 450:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
ARM GAS  /tmp/ccXybvFx.s 			page 17


 451:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 454:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 457:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 459:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 461:Drivers/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 463:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 464:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 465:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 469:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 470:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 472:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 473:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 474:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 475:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 476:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 477:Drivers/CMSIS/DSP/Include/arm_math.h ****   return (val);
 478:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 479:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 480:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 481:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 482:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 484:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 485:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 487:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 488:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 490:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 491:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 492:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 493:Drivers/CMSIS/DSP/Include/arm_math.h ****   return (val);
 494:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 495:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 496:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 497:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 500:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 502:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 503:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 506:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 507:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccXybvFx.s 			page 18


 508:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 509:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 510:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 511:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 512:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 513:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer.
 514:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 515:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 516:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        none
 517:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 518:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2 (
 519:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15,
 520:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 521:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 522:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 523:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 524:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (pQ15, &val, 4);
 525:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 526:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 527:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 528:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 529:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and increment pointer afterwards.
 530:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 531:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 532:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 533:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_ia (
 534:Drivers/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 535:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 536:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 537:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 538:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 539:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 540:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 541:Drivers/CMSIS/DSP/Include/arm_math.h ****   return (val);
 542:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 543:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 544:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 545:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and decrement pointer afterwards.
 546:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 547:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 548:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 549:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_da (
 550:Drivers/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 551:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 552:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 553:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 554:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 555:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ7 -= 4;
 556:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 557:Drivers/CMSIS/DSP/Include/arm_math.h ****   return (val);
 558:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 559:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 560:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 561:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 4 Q7 to Q7 pointer and increment pointer afterwards.
 562:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 563:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 564:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        none
ARM GAS  /tmp/ccXybvFx.s 			page 19


 565:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 566:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q7x4_ia (
 567:Drivers/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7,
 568:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 569:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 570:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 571:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 572:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ7, &val, 4);
 573:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 574:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 575:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 576:Drivers/CMSIS/DSP/Include/arm_math.h **** /*
 577:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 578:Drivers/CMSIS/DSP/Include/arm_math.h **** Normally those kind of definitions are in a compiler file
 579:Drivers/CMSIS/DSP/Include/arm_math.h **** in Core or Core_A.
 580:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 581:Drivers/CMSIS/DSP/Include/arm_math.h **** But for MSVC compiler it is a bit special. The goal is very specific
 582:Drivers/CMSIS/DSP/Include/arm_math.h **** to CMSIS-DSP and only to allow the use of this library from other
 583:Drivers/CMSIS/DSP/Include/arm_math.h **** systems like Python or Matlab.
 584:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 585:Drivers/CMSIS/DSP/Include/arm_math.h **** MSVC is not going to be used to cross-compile to ARM. So, having a MSVC
 586:Drivers/CMSIS/DSP/Include/arm_math.h **** compiler file in Core or Core_A would not make sense.
 587:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 588:Drivers/CMSIS/DSP/Include/arm_math.h **** */
 589:Drivers/CMSIS/DSP/Include/arm_math.h **** #if defined ( _MSC_VER )
 590:Drivers/CMSIS/DSP/Include/arm_math.h ****     __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t data)
 591:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 592:Drivers/CMSIS/DSP/Include/arm_math.h ****       if (data == 0U) { return 32U; }
 593:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 594:Drivers/CMSIS/DSP/Include/arm_math.h ****       uint32_t count = 0U;
 595:Drivers/CMSIS/DSP/Include/arm_math.h ****       uint32_t mask = 0x80000000U;
 596:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 597:Drivers/CMSIS/DSP/Include/arm_math.h ****       while ((data & mask) == 0U)
 598:Drivers/CMSIS/DSP/Include/arm_math.h ****       {
 599:Drivers/CMSIS/DSP/Include/arm_math.h ****         count += 1U;
 600:Drivers/CMSIS/DSP/Include/arm_math.h ****         mask = mask >> 1U;
 601:Drivers/CMSIS/DSP/Include/arm_math.h ****       }
 602:Drivers/CMSIS/DSP/Include/arm_math.h ****       return count;
 603:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 604:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 605:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 606:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 607:Drivers/CMSIS/DSP/Include/arm_math.h ****     if ((sat >= 1U) && (sat <= 32U))
 608:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 609:Drivers/CMSIS/DSP/Include/arm_math.h ****       const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 610:Drivers/CMSIS/DSP/Include/arm_math.h ****       const int32_t min = -1 - max ;
 611:Drivers/CMSIS/DSP/Include/arm_math.h ****       if (val > max)
 612:Drivers/CMSIS/DSP/Include/arm_math.h ****       {
 613:Drivers/CMSIS/DSP/Include/arm_math.h ****         return max;
 614:Drivers/CMSIS/DSP/Include/arm_math.h ****       }
 615:Drivers/CMSIS/DSP/Include/arm_math.h ****       else if (val < min)
 616:Drivers/CMSIS/DSP/Include/arm_math.h ****       {
 617:Drivers/CMSIS/DSP/Include/arm_math.h ****         return min;
 618:Drivers/CMSIS/DSP/Include/arm_math.h ****       }
 619:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 620:Drivers/CMSIS/DSP/Include/arm_math.h ****     return val;
 621:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
ARM GAS  /tmp/ccXybvFx.s 			page 20


 622:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 623:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 624:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 625:Drivers/CMSIS/DSP/Include/arm_math.h ****     if (sat <= 31U)
 626:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 627:Drivers/CMSIS/DSP/Include/arm_math.h ****       const uint32_t max = ((1U << sat) - 1U);
 628:Drivers/CMSIS/DSP/Include/arm_math.h ****       if (val > (int32_t)max)
 629:Drivers/CMSIS/DSP/Include/arm_math.h ****       {
 630:Drivers/CMSIS/DSP/Include/arm_math.h ****         return max;
 631:Drivers/CMSIS/DSP/Include/arm_math.h ****       }
 632:Drivers/CMSIS/DSP/Include/arm_math.h ****       else if (val < 0)
 633:Drivers/CMSIS/DSP/Include/arm_math.h ****       {
 634:Drivers/CMSIS/DSP/Include/arm_math.h ****         return 0U;
 635:Drivers/CMSIS/DSP/Include/arm_math.h ****       }
 636:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 637:Drivers/CMSIS/DSP/Include/arm_math.h ****     return (uint32_t)val;
 638:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 639:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 640:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 641:Drivers/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_DSP
 642:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 643:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 644:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 645:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 646:Drivers/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 647:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 648:Drivers/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 649:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 650:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 651:Drivers/CMSIS/DSP/Include/arm_math.h ****    /**
 652:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 653:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 654:Drivers/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 655:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 656:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 657:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 658:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 659:Drivers/CMSIS/DSP/Include/arm_math.h **** #else
 660:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 661:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 662:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 663:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 664:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 665:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 666:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 667:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 668:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 669:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 670:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q31_t clip_q63_to_q31(
 211              		.loc 2 670 30 is_stmt 1 view .LVU65
 212              	.LBB7:
 671:Drivers/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 672:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 673:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 213              		.loc 2 673 5 view .LVU66
 214              		.loc 2 673 24 is_stmt 0 view .LVU67
 215 00bc 4FEAEC71 		asr	r1, ip, #31
ARM GAS  /tmp/ccXybvFx.s 			page 21


 216              	.LVL33:
 217              		.loc 2 673 35 view .LVU68
 218 00c0 3B46     		mov	r3, r7
 219              		.loc 2 673 45 view .LVU69
 220 00c2 FF17     		asrs	r7, r7, #31
 221              	.LVL34:
 674:Drivers/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 222              		.loc 2 674 44 view .LVU70
 223 00c4 B7EBEC7F 		cmp	r7, ip, asr #31
 224 00c8 02D0     		beq	.L4
 225 00ca 6FF00043 		mvn	r3, #-2147483648
 226              	.LVL35:
 227              		.loc 2 674 44 view .LVU71
 228 00ce 4B40     		eors	r3, r3, r1
 229              	.L4:
 230              		.loc 2 674 44 view .LVU72
 231              	.LBE7:
 232              	.LBE6:
 233              		.loc 1 252 15 view .LVU73
 234 00d0 0399     		ldr	r1, [sp, #12]
 235 00d2 41F8083B 		str	r3, [r1], #8
 253:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumImag >> 31);
 236              		.loc 1 253 9 is_stmt 1 view .LVU74
 237              		.loc 1 253 25 is_stmt 0 view .LVU75
 238 00d6 ED0F     		lsrs	r5, r5, #31
 239              	.LVL36:
 240              		.loc 1 253 25 view .LVU76
 241 00d8 45EA4205 		orr	r5, r5, r2, lsl #1
 242              	.LVL37:
 243              	.LBB8:
 244              	.LBI8:
 670:Drivers/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 245              		.loc 2 670 30 is_stmt 1 view .LVU77
 246              	.LBB9:
 673:Drivers/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 247              		.loc 2 673 5 view .LVU78
 673:Drivers/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 248              		.loc 2 673 24 is_stmt 0 view .LVU79
 249 00dc D017     		asrs	r0, r2, #31
 250              	.LVL38:
 673:Drivers/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 251              		.loc 2 673 35 view .LVU80
 252 00de 2B46     		mov	r3, r5
 673:Drivers/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 253              		.loc 2 673 45 view .LVU81
 254 00e0 ED17     		asrs	r5, r5, #31
 255              	.LVL39:
 256              		.loc 2 674 44 view .LVU82
 257 00e2 B5EBE27F 		cmp	r5, r2, asr #31
 258 00e6 02D0     		beq	.L5
 259 00e8 6FF00043 		mvn	r3, #-2147483648
 260              	.LVL40:
 261              		.loc 2 674 44 view .LVU83
 262 00ec 4340     		eors	r3, r3, r0
 263              	.L5:
 264              		.loc 2 674 44 view .LVU84
 265              	.LBE9:
ARM GAS  /tmp/ccXybvFx.s 			page 22


 266              	.LBE8:
 267              		.loc 1 253 15 view .LVU85
 268 00ee 039A     		ldr	r2, [sp, #12]
 269 00f0 5360     		str	r3, [r2, #4]
 254:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 255:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Update pointer pIn2 to point to starting address of next column */
 256:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         j++;
 270              		.loc 1 256 9 is_stmt 1 view .LVU86
 271              		.loc 1 256 10 is_stmt 0 view .LVU87
 272 00f2 059A     		ldr	r2, [sp, #20]
 273 00f4 0132     		adds	r2, r2, #1
 274 00f6 0592     		str	r2, [sp, #20]
 275              	.LVL41:
 257:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         pIn2 = pSrcB->pData + 2U * j;
 276              		.loc 1 257 9 is_stmt 1 view .LVU88
 277              		.loc 1 257 21 is_stmt 0 view .LVU89
 278 00f8 089B     		ldr	r3, [sp, #32]
 279 00fa 5B68     		ldr	r3, [r3, #4]
 280              		.loc 1 257 14 view .LVU90
 281 00fc 03EBC209 		add	r9, r3, r2, lsl #3
 282              	.LVL42:
 258:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 259:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Decrement column loop counter */
 260:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         col--;
 283              		.loc 1 260 9 is_stmt 1 view .LVU91
 261:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 262:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       } while (col > 0U);
 284              		.loc 1 262 15 view .LVU92
 285              		.loc 1 262 7 is_stmt 0 view .LVU93
 286 0100 049B     		ldr	r3, [sp, #16]
 287 0102 013B     		subs	r3, r3, #1
 288              	.LVL43:
 289              		.loc 1 262 7 view .LVU94
 290 0104 0493     		str	r3, [sp, #16]
 291 0106 0AD0     		beq	.L10
 253:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 292              		.loc 1 253 12 view .LVU95
 293 0108 0391     		str	r1, [sp, #12]
 294              	.LVL44:
 295              	.L6:
 114:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       {
 296              		.loc 1 114 7 is_stmt 1 view .LVU96
 117:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumImag = 0.0;
 297              		.loc 1 117 9 view .LVU97
 118:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 298              		.loc 1 118 9 view .LVU98
 121:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 299              		.loc 1 121 9 view .LVU99
 223:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 300              		.loc 1 223 9 view .LVU100
 227:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 301              		.loc 1 227 9 view .LVU101
 223:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 302              		.loc 1 223 16 is_stmt 0 view .LVU102
 303 010a 079B     		ldr	r3, [sp, #28]
 304 010c 0093     		str	r3, [sp]
 121:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
ARM GAS  /tmp/ccXybvFx.s 			page 23


 305              		.loc 1 121 14 view .LVU103
 306 010e DDF818A0 		ldr	r10, [sp, #24]
 118:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 307              		.loc 1 118 17 view .LVU104
 308 0112 0025     		movs	r5, #0
 117:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumImag = 0.0;
 309              		.loc 1 117 17 view .LVU105
 310 0114 2F46     		mov	r7, r5
 311 0116 AC46     		mov	ip, r5
 312 0118 D046     		mov	r8, r10
 313 011a 0195     		str	r5, [sp, #4]
 227:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 314              		.loc 1 227 15 view .LVU106
 315 011c C7E7     		b	.L2
 316              	.LVL45:
 317              	.L10:
 263:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 264:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Update pointer pInA to point to starting address of next row */
 265:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       i = i + numColsB;
 318              		.loc 1 265 7 is_stmt 1 view .LVU107
 319              		.loc 1 265 9 is_stmt 0 view .LVU108
 320 011e 099B     		ldr	r3, [sp, #36]
 321              	.LVL46:
 322              		.loc 1 265 9 view .LVU109
 323 0120 029A     		ldr	r2, [sp, #8]
 324              	.LVL47:
 325              		.loc 1 265 9 view .LVU110
 326 0122 1344     		add	r3, r3, r2
 327 0124 0993     		str	r3, [sp, #36]
 328              	.LVL48:
 266:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       pInA = pInA + 2 * numColsA;
 329              		.loc 1 266 7 is_stmt 1 view .LVU111
 330              		.loc 1 266 12 is_stmt 0 view .LVU112
 331 0126 069B     		ldr	r3, [sp, #24]
 332              	.LVL49:
 333              		.loc 1 266 12 view .LVU113
 334 0128 079A     		ldr	r2, [sp, #28]
 335 012a 03EBC203 		add	r3, r3, r2, lsl #3
 336 012e 0693     		str	r3, [sp, #24]
 337              	.LVL50:
 267:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 268:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Decrement row loop counter */
 269:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       row--;
 338              		.loc 1 269 7 is_stmt 1 view .LVU114
 270:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 271:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     } while (row > 0U);
 339              		.loc 1 271 13 view .LVU115
 340              		.loc 1 271 5 is_stmt 0 view .LVU116
 341 0130 0A9B     		ldr	r3, [sp, #40]
 342              	.LVL51:
 343              		.loc 1 271 5 view .LVU117
 344 0132 013B     		subs	r3, r3, #1
 345              	.LVL52:
 346              		.loc 1 271 5 view .LVU118
 347 0134 0A93     		str	r3, [sp, #40]
 348 0136 0CD0     		beq	.L11
 349              	.LVL53:
ARM GAS  /tmp/ccXybvFx.s 			page 24


 350              	.L7:
  76:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 351              		.loc 1 76 3 is_stmt 1 view .LVU119
  99:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     {
 352              		.loc 1 99 5 view .LVU120
 102:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 353              		.loc 1 102 7 view .LVU121
 102:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 354              		.loc 1 102 10 is_stmt 0 view .LVU122
 355 0138 0B9B     		ldr	r3, [sp, #44]
 356 013a 099A     		ldr	r2, [sp, #36]
 357 013c 03EBC203 		add	r3, r3, r2, lsl #3
 358 0140 0393     		str	r3, [sp, #12]
 359              	.LVL54:
 105:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 360              		.loc 1 105 7 is_stmt 1 view .LVU123
 109:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 361              		.loc 1 109 7 view .LVU124
 109:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 362              		.loc 1 109 12 is_stmt 0 view .LVU125
 363 0142 089B     		ldr	r3, [sp, #32]
 364              	.LVL55:
 109:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 365              		.loc 1 109 12 view .LVU126
 366 0144 D3F80490 		ldr	r9, [r3, #4]
 367              	.LVL56:
 111:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 368              		.loc 1 111 7 is_stmt 1 view .LVU127
 105:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 369              		.loc 1 105 11 is_stmt 0 view .LVU128
 370 0148 029B     		ldr	r3, [sp, #8]
 371 014a 0493     		str	r3, [sp, #16]
 111:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 372              		.loc 1 111 9 view .LVU129
 373 014c 0023     		movs	r3, #0
 374 014e 0593     		str	r3, [sp, #20]
 375 0150 DBE7     		b	.L6
 376              	.LVL57:
 377              	.L11:
 272:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 273:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* Set status as ARM_MATH_SUCCESS */
 274:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     status = ARM_MATH_SUCCESS;
 378              		.loc 1 274 5 is_stmt 1 view .LVU130
 275:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   }
 276:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 277:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   /* Return to application */
 278:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   return (status);
 379              		.loc 1 278 3 view .LVU131
 279:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** }
 380              		.loc 1 279 1 is_stmt 0 view .LVU132
 381 0152 0020     		movs	r0, #0
 382 0154 0DB0     		add	sp, sp, #52
 383              	.LCFI2:
 384              		.cfi_def_cfa_offset 36
 385              	.LVL58:
 386              		.loc 1 279 1 view .LVU133
 387              		@ sp needed
ARM GAS  /tmp/ccXybvFx.s 			page 25


 388 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 389              		.loc 1 279 1 view .LVU134
 390              		.cfi_endproc
 391              	.LFE145:
 393              		.text
 394              	.Letext0:
 395              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
ARM GAS  /tmp/ccXybvFx.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_mat_cmplx_mult_q31.c
     /tmp/ccXybvFx.s:17     .text.arm_mat_cmplx_mult_q31:0000000000000000 $t
     /tmp/ccXybvFx.s:25     .text.arm_mat_cmplx_mult_q31:0000000000000000 arm_mat_cmplx_mult_q31

NO UNDEFINED SYMBOLS
