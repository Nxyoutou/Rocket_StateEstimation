ARM GAS  /tmp/cc1kPWzz.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_it.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.NMI_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	NMI_Handler
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	NMI_Handler:
  26              	.LFB350:
  27              		.file 1 "Core/Src/stm32h7xx_it.c"
   1:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_it.c **** /**
   3:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Core/Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_it.c ****   * @attention
   8:Core/Src/stm32h7xx_it.c ****   *
   9:Core/Src/stm32h7xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32h7xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32h7xx_it.c ****   *
  12:Core/Src/stm32h7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32h7xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32h7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32h7xx_it.c ****   *
  16:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32h7xx_it.c ****   */
  18:Core/Src/stm32h7xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32h7xx_it.c **** 
  20:Core/Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32h7xx_it.c **** #include "init.h"
  22:Core/Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  23:Core/Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32h7xx_it.c **** 
  27:Core/Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32h7xx_it.c **** 
  30:Core/Src/stm32h7xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32h7xx_it.c **** 
ARM GAS  /tmp/cc1kPWzz.s 			page 2


  32:Core/Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32h7xx_it.c **** 
  35:Core/Src/stm32h7xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32h7xx_it.c **** 
  37:Core/Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32h7xx_it.c **** 
  40:Core/Src/stm32h7xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32h7xx_it.c **** 
  42:Core/Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32h7xx_it.c **** 
  45:Core/Src/stm32h7xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32h7xx_it.c **** 
  47:Core/Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32h7xx_it.c **** 
  50:Core/Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32h7xx_it.c **** 
  52:Core/Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32h7xx_it.c **** 
  55:Core/Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32h7xx_it.c **** 
  57:Core/Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  59:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_tx;
  60:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_rx;
  61:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  62:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_spi3_rx;
  63:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_spi3_tx;
  64:Core/Src/stm32h7xx_it.c **** extern SPI_HandleTypeDef hspi1;
  65:Core/Src/stm32h7xx_it.c **** extern SPI_HandleTypeDef hspi3;
  66:Core/Src/stm32h7xx_it.c **** extern TIM_HandleTypeDef htim3;
  67:Core/Src/stm32h7xx_it.c **** extern TIM_HandleTypeDef htim4;
  68:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  69:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  70:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart1;
  71:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart3;
  72:Core/Src/stm32h7xx_it.c **** 
  73:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  74:Core/Src/stm32h7xx_it.c **** 
  75:Core/Src/stm32h7xx_it.c **** /* USER CODE END EV */
  76:Core/Src/stm32h7xx_it.c **** 
  77:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  78:Core/Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  79:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  80:Core/Src/stm32h7xx_it.c **** /**
  81:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  82:Core/Src/stm32h7xx_it.c ****   */
  83:Core/Src/stm32h7xx_it.c **** void NMI_Handler(void)
  84:Core/Src/stm32h7xx_it.c **** {
  28              		.loc 1 84 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc1kPWzz.s 			page 3


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  85:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  86:Core/Src/stm32h7xx_it.c **** 
  87:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  88:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  89:Core/Src/stm32h7xx_it.c ****    while (1)
  35              		.loc 1 89 4 discriminator 1 view .LVU1
  90:Core/Src/stm32h7xx_it.c ****   {
  91:Core/Src/stm32h7xx_it.c ****   }
  36              		.loc 1 91 3 discriminator 1 view .LVU2
  89:Core/Src/stm32h7xx_it.c ****   {
  37              		.loc 1 89 10 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE350:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv5-d16
  50              	HardFault_Handler:
  51              	.LFB351:
  92:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  93:Core/Src/stm32h7xx_it.c **** }
  94:Core/Src/stm32h7xx_it.c **** 
  95:Core/Src/stm32h7xx_it.c **** /**
  96:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  97:Core/Src/stm32h7xx_it.c ****   */
  98:Core/Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  99:Core/Src/stm32h7xx_it.c **** {
  52              		.loc 1 99 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
 100:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 101:Core/Src/stm32h7xx_it.c **** 
 102:Core/Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 103:Core/Src/stm32h7xx_it.c ****   while (1)
  59              		.loc 1 103 3 discriminator 1 view .LVU5
 104:Core/Src/stm32h7xx_it.c ****   {
 105:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 106:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 107:Core/Src/stm32h7xx_it.c ****   }
  60              		.loc 1 107 3 discriminator 1 view .LVU6
 103:Core/Src/stm32h7xx_it.c ****   {
  61              		.loc 1 103 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE351:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
ARM GAS  /tmp/cc1kPWzz.s 			page 4


  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv5-d16
  74              	MemManage_Handler:
  75              	.LFB352:
 108:Core/Src/stm32h7xx_it.c **** }
 109:Core/Src/stm32h7xx_it.c **** 
 110:Core/Src/stm32h7xx_it.c **** /**
 111:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
 112:Core/Src/stm32h7xx_it.c ****   */
 113:Core/Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 114:Core/Src/stm32h7xx_it.c **** {
  76              		.loc 1 114 1 view -0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.L6:
 115:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 116:Core/Src/stm32h7xx_it.c **** 
 117:Core/Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 118:Core/Src/stm32h7xx_it.c ****   while (1)
  83              		.loc 1 118 3 discriminator 1 view .LVU9
 119:Core/Src/stm32h7xx_it.c ****   {
 120:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 121:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 122:Core/Src/stm32h7xx_it.c ****   }
  84              		.loc 1 122 3 discriminator 1 view .LVU10
 118:Core/Src/stm32h7xx_it.c ****   {
  85              		.loc 1 118 9 discriminator 1 view .LVU11
  86 0000 FEE7     		b	.L6
  87              		.cfi_endproc
  88              	.LFE352:
  90              		.section	.text.BusFault_Handler,"ax",%progbits
  91              		.align	1
  92              		.global	BusFault_Handler
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv5-d16
  98              	BusFault_Handler:
  99              	.LFB353:
 123:Core/Src/stm32h7xx_it.c **** }
 124:Core/Src/stm32h7xx_it.c **** 
 125:Core/Src/stm32h7xx_it.c **** /**
 126:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 127:Core/Src/stm32h7xx_it.c ****   */
 128:Core/Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 129:Core/Src/stm32h7xx_it.c **** {
 100              		.loc 1 129 1 view -0
 101              		.cfi_startproc
 102              		@ Volatile: function does not return.
 103              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc1kPWzz.s 			page 5


 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106              	.L8:
 130:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 131:Core/Src/stm32h7xx_it.c **** 
 132:Core/Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 133:Core/Src/stm32h7xx_it.c ****   while (1)
 107              		.loc 1 133 3 discriminator 1 view .LVU13
 134:Core/Src/stm32h7xx_it.c ****   {
 135:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 136:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 137:Core/Src/stm32h7xx_it.c ****   }
 108              		.loc 1 137 3 discriminator 1 view .LVU14
 133:Core/Src/stm32h7xx_it.c ****   {
 109              		.loc 1 133 9 discriminator 1 view .LVU15
 110 0000 FEE7     		b	.L8
 111              		.cfi_endproc
 112              	.LFE353:
 114              		.section	.text.UsageFault_Handler,"ax",%progbits
 115              		.align	1
 116              		.global	UsageFault_Handler
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv5-d16
 122              	UsageFault_Handler:
 123              	.LFB354:
 138:Core/Src/stm32h7xx_it.c **** }
 139:Core/Src/stm32h7xx_it.c **** 
 140:Core/Src/stm32h7xx_it.c **** /**
 141:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 142:Core/Src/stm32h7xx_it.c ****   */
 143:Core/Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 144:Core/Src/stm32h7xx_it.c **** {
 124              		.loc 1 144 1 view -0
 125              		.cfi_startproc
 126              		@ Volatile: function does not return.
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.L10:
 145:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 146:Core/Src/stm32h7xx_it.c **** 
 147:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 148:Core/Src/stm32h7xx_it.c ****   while (1)
 131              		.loc 1 148 3 discriminator 1 view .LVU17
 149:Core/Src/stm32h7xx_it.c ****   {
 150:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 151:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 152:Core/Src/stm32h7xx_it.c ****   }
 132              		.loc 1 152 3 discriminator 1 view .LVU18
 148:Core/Src/stm32h7xx_it.c ****   {
 133              		.loc 1 148 9 discriminator 1 view .LVU19
 134 0000 FEE7     		b	.L10
 135              		.cfi_endproc
 136              	.LFE354:
 138              		.section	.text.SVC_Handler,"ax",%progbits
ARM GAS  /tmp/cc1kPWzz.s 			page 6


 139              		.align	1
 140              		.global	SVC_Handler
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv5-d16
 146              	SVC_Handler:
 147              	.LFB355:
 153:Core/Src/stm32h7xx_it.c **** }
 154:Core/Src/stm32h7xx_it.c **** 
 155:Core/Src/stm32h7xx_it.c **** /**
 156:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 157:Core/Src/stm32h7xx_it.c ****   */
 158:Core/Src/stm32h7xx_it.c **** void SVC_Handler(void)
 159:Core/Src/stm32h7xx_it.c **** {
 148              		.loc 1 159 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 160:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 161:Core/Src/stm32h7xx_it.c **** 
 162:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 163:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 164:Core/Src/stm32h7xx_it.c **** 
 165:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 166:Core/Src/stm32h7xx_it.c **** }
 153              		.loc 1 166 1 view .LVU21
 154 0000 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE355:
 158              		.section	.text.DebugMon_Handler,"ax",%progbits
 159              		.align	1
 160              		.global	DebugMon_Handler
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv5-d16
 166              	DebugMon_Handler:
 167              	.LFB356:
 167:Core/Src/stm32h7xx_it.c **** 
 168:Core/Src/stm32h7xx_it.c **** /**
 169:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 170:Core/Src/stm32h7xx_it.c ****   */
 171:Core/Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 172:Core/Src/stm32h7xx_it.c **** {
 168              		.loc 1 172 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 174:Core/Src/stm32h7xx_it.c **** 
 175:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 176:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 177:Core/Src/stm32h7xx_it.c **** 
 178:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
ARM GAS  /tmp/cc1kPWzz.s 			page 7


 179:Core/Src/stm32h7xx_it.c **** }
 173              		.loc 1 179 1 view .LVU23
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE356:
 178              		.section	.text.PendSV_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	PendSV_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv5-d16
 186              	PendSV_Handler:
 187              	.LFB357:
 180:Core/Src/stm32h7xx_it.c **** 
 181:Core/Src/stm32h7xx_it.c **** /**
 182:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pendable request for system service.
 183:Core/Src/stm32h7xx_it.c ****   */
 184:Core/Src/stm32h7xx_it.c **** void PendSV_Handler(void)
 185:Core/Src/stm32h7xx_it.c **** {
 188              		.loc 1 185 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 186:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 187:Core/Src/stm32h7xx_it.c **** 
 188:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 189:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 190:Core/Src/stm32h7xx_it.c **** 
 191:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 192:Core/Src/stm32h7xx_it.c **** }
 193              		.loc 1 192 1 view .LVU25
 194 0000 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE357:
 198              		.section	.text.SysTick_Handler,"ax",%progbits
 199              		.align	1
 200              		.global	SysTick_Handler
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv5-d16
 206              	SysTick_Handler:
 207              	.LFB358:
 193:Core/Src/stm32h7xx_it.c **** 
 194:Core/Src/stm32h7xx_it.c **** /**
 195:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System tick timer.
 196:Core/Src/stm32h7xx_it.c ****   */
 197:Core/Src/stm32h7xx_it.c **** void SysTick_Handler(void)
 198:Core/Src/stm32h7xx_it.c **** {
 208              		.loc 1 198 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI0:
ARM GAS  /tmp/cc1kPWzz.s 			page 8


 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 199:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 200:Core/Src/stm32h7xx_it.c **** 
 201:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 202:Core/Src/stm32h7xx_it.c ****   HAL_IncTick();
 217              		.loc 1 202 3 view .LVU27
 218 0002 FFF7FEFF 		bl	HAL_IncTick
 219              	.LVL0:
 203:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 204:Core/Src/stm32h7xx_it.c **** 
 205:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 206:Core/Src/stm32h7xx_it.c **** }
 220              		.loc 1 206 1 is_stmt 0 view .LVU28
 221 0006 08BD     		pop	{r3, pc}
 222              		.cfi_endproc
 223              	.LFE358:
 225              		.section	.text.DMA1_Stream0_IRQHandler,"ax",%progbits
 226              		.align	1
 227              		.global	DMA1_Stream0_IRQHandler
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv5-d16
 233              	DMA1_Stream0_IRQHandler:
 234              	.LFB359:
 207:Core/Src/stm32h7xx_it.c **** 
 208:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 209:Core/Src/stm32h7xx_it.c **** /* STM32H7xx Peripheral Interrupt Handlers                                    */
 210:Core/Src/stm32h7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 211:Core/Src/stm32h7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 212:Core/Src/stm32h7xx_it.c **** /* please refer to the startup file (startup_stm32h7xx.s).                    */
 213:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 214:Core/Src/stm32h7xx_it.c **** 
 215:Core/Src/stm32h7xx_it.c **** /**
 216:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream0 global interrupt.
 217:Core/Src/stm32h7xx_it.c ****   */
 218:Core/Src/stm32h7xx_it.c **** void DMA1_Stream0_IRQHandler(void)
 219:Core/Src/stm32h7xx_it.c **** {
 235              		.loc 1 219 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 08B5     		push	{r3, lr}
 240              	.LCFI1:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 3, -8
 243              		.cfi_offset 14, -4
 220:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */
 221:Core/Src/stm32h7xx_it.c **** 
 222:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 0 */
 223:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 244              		.loc 1 223 3 view .LVU30
 245 0002 0248     		ldr	r0, .L18
 246 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 247              	.LVL1:
ARM GAS  /tmp/cc1kPWzz.s 			page 9


 224:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */
 225:Core/Src/stm32h7xx_it.c **** 
 226:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 1 */
 227:Core/Src/stm32h7xx_it.c **** }
 248              		.loc 1 227 1 is_stmt 0 view .LVU31
 249 0008 08BD     		pop	{r3, pc}
 250              	.L19:
 251 000a 00BF     		.align	2
 252              	.L18:
 253 000c 00000000 		.word	hdma_usart1_rx
 254              		.cfi_endproc
 255              	.LFE359:
 257              		.section	.text.DMA1_Stream1_IRQHandler,"ax",%progbits
 258              		.align	1
 259              		.global	DMA1_Stream1_IRQHandler
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu fpv5-d16
 265              	DMA1_Stream1_IRQHandler:
 266              	.LFB360:
 228:Core/Src/stm32h7xx_it.c **** 
 229:Core/Src/stm32h7xx_it.c **** /**
 230:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream1 global interrupt.
 231:Core/Src/stm32h7xx_it.c ****   */
 232:Core/Src/stm32h7xx_it.c **** void DMA1_Stream1_IRQHandler(void)
 233:Core/Src/stm32h7xx_it.c **** {
 267              		.loc 1 233 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 08B5     		push	{r3, lr}
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 3, -8
 275              		.cfi_offset 14, -4
 234:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */
 235:Core/Src/stm32h7xx_it.c **** 
 236:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 0 */
 237:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 276              		.loc 1 237 3 view .LVU33
 277 0002 0248     		ldr	r0, .L22
 278 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 279              	.LVL2:
 238:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */
 239:Core/Src/stm32h7xx_it.c **** 
 240:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 1 */
 241:Core/Src/stm32h7xx_it.c **** }
 280              		.loc 1 241 1 is_stmt 0 view .LVU34
 281 0008 08BD     		pop	{r3, pc}
 282              	.L23:
 283 000a 00BF     		.align	2
 284              	.L22:
 285 000c 00000000 		.word	hdma_usart1_tx
 286              		.cfi_endproc
 287              	.LFE360:
 289              		.section	.text.DMA1_Stream2_IRQHandler,"ax",%progbits
ARM GAS  /tmp/cc1kPWzz.s 			page 10


 290              		.align	1
 291              		.global	DMA1_Stream2_IRQHandler
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv5-d16
 297              	DMA1_Stream2_IRQHandler:
 298              	.LFB361:
 242:Core/Src/stm32h7xx_it.c **** 
 243:Core/Src/stm32h7xx_it.c **** /**
 244:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream2 global interrupt.
 245:Core/Src/stm32h7xx_it.c ****   */
 246:Core/Src/stm32h7xx_it.c **** void DMA1_Stream2_IRQHandler(void)
 247:Core/Src/stm32h7xx_it.c **** {
 299              		.loc 1 247 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 08B5     		push	{r3, lr}
 304              	.LCFI3:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 3, -8
 307              		.cfi_offset 14, -4
 248:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */
 249:Core/Src/stm32h7xx_it.c **** 
 250:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 0 */
 251:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_rx);
 308              		.loc 1 251 3 view .LVU36
 309 0002 0248     		ldr	r0, .L26
 310 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 311              	.LVL3:
 252:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */
 253:Core/Src/stm32h7xx_it.c **** 
 254:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 1 */
 255:Core/Src/stm32h7xx_it.c **** }
 312              		.loc 1 255 1 is_stmt 0 view .LVU37
 313 0008 08BD     		pop	{r3, pc}
 314              	.L27:
 315 000a 00BF     		.align	2
 316              	.L26:
 317 000c 00000000 		.word	hdma_spi1_rx
 318              		.cfi_endproc
 319              	.LFE361:
 321              		.section	.text.DMA1_Stream3_IRQHandler,"ax",%progbits
 322              		.align	1
 323              		.global	DMA1_Stream3_IRQHandler
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu fpv5-d16
 329              	DMA1_Stream3_IRQHandler:
 330              	.LFB362:
 256:Core/Src/stm32h7xx_it.c **** 
 257:Core/Src/stm32h7xx_it.c **** /**
 258:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream3 global interrupt.
 259:Core/Src/stm32h7xx_it.c ****   */
 260:Core/Src/stm32h7xx_it.c **** void DMA1_Stream3_IRQHandler(void)
ARM GAS  /tmp/cc1kPWzz.s 			page 11


 261:Core/Src/stm32h7xx_it.c **** {
 331              		.loc 1 261 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335 0000 08B5     		push	{r3, lr}
 336              	.LCFI4:
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
 262:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */
 263:Core/Src/stm32h7xx_it.c **** 
 264:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 0 */
 265:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_tx);
 340              		.loc 1 265 3 view .LVU39
 341 0002 0248     		ldr	r0, .L30
 342 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 343              	.LVL4:
 266:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */
 267:Core/Src/stm32h7xx_it.c **** 
 268:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 1 */
 269:Core/Src/stm32h7xx_it.c **** }
 344              		.loc 1 269 1 is_stmt 0 view .LVU40
 345 0008 08BD     		pop	{r3, pc}
 346              	.L31:
 347 000a 00BF     		.align	2
 348              	.L30:
 349 000c 00000000 		.word	hdma_spi1_tx
 350              		.cfi_endproc
 351              	.LFE362:
 353              		.section	.text.DMA1_Stream4_IRQHandler,"ax",%progbits
 354              		.align	1
 355              		.global	DMA1_Stream4_IRQHandler
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 359              		.fpu fpv5-d16
 361              	DMA1_Stream4_IRQHandler:
 362              	.LFB363:
 270:Core/Src/stm32h7xx_it.c **** 
 271:Core/Src/stm32h7xx_it.c **** /**
 272:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream4 global interrupt.
 273:Core/Src/stm32h7xx_it.c ****   */
 274:Core/Src/stm32h7xx_it.c **** void DMA1_Stream4_IRQHandler(void)
 275:Core/Src/stm32h7xx_it.c **** {
 363              		.loc 1 275 1 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 08B5     		push	{r3, lr}
 368              	.LCFI5:
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 3, -8
 371              		.cfi_offset 14, -4
 276:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */
 277:Core/Src/stm32h7xx_it.c **** 
 278:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 0 */
ARM GAS  /tmp/cc1kPWzz.s 			page 12


 279:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 372              		.loc 1 279 3 view .LVU42
 373 0002 0248     		ldr	r0, .L34
 374 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 375              	.LVL5:
 280:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */
 281:Core/Src/stm32h7xx_it.c **** 
 282:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 1 */
 283:Core/Src/stm32h7xx_it.c **** }
 376              		.loc 1 283 1 is_stmt 0 view .LVU43
 377 0008 08BD     		pop	{r3, pc}
 378              	.L35:
 379 000a 00BF     		.align	2
 380              	.L34:
 381 000c 00000000 		.word	hdma_i2c1_rx
 382              		.cfi_endproc
 383              	.LFE363:
 385              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 386              		.align	1
 387              		.global	DMA1_Stream5_IRQHandler
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 391              		.fpu fpv5-d16
 393              	DMA1_Stream5_IRQHandler:
 394              	.LFB364:
 284:Core/Src/stm32h7xx_it.c **** 
 285:Core/Src/stm32h7xx_it.c **** /**
 286:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream5 global interrupt.
 287:Core/Src/stm32h7xx_it.c ****   */
 288:Core/Src/stm32h7xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 289:Core/Src/stm32h7xx_it.c **** {
 395              		.loc 1 289 1 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399 0000 08B5     		push	{r3, lr}
 400              	.LCFI6:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 3, -8
 403              		.cfi_offset 14, -4
 290:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
 291:Core/Src/stm32h7xx_it.c **** 
 292:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 293:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_tx);
 404              		.loc 1 293 3 view .LVU45
 405 0002 0248     		ldr	r0, .L38
 406 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 407              	.LVL6:
 294:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */
 295:Core/Src/stm32h7xx_it.c **** 
 296:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 1 */
 297:Core/Src/stm32h7xx_it.c **** }
 408              		.loc 1 297 1 is_stmt 0 view .LVU46
 409 0008 08BD     		pop	{r3, pc}
 410              	.L39:
 411 000a 00BF     		.align	2
ARM GAS  /tmp/cc1kPWzz.s 			page 13


 412              	.L38:
 413 000c 00000000 		.word	hdma_i2c1_tx
 414              		.cfi_endproc
 415              	.LFE364:
 417              		.section	.text.DMA1_Stream6_IRQHandler,"ax",%progbits
 418              		.align	1
 419              		.global	DMA1_Stream6_IRQHandler
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu fpv5-d16
 425              	DMA1_Stream6_IRQHandler:
 426              	.LFB365:
 298:Core/Src/stm32h7xx_it.c **** 
 299:Core/Src/stm32h7xx_it.c **** /**
 300:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream6 global interrupt.
 301:Core/Src/stm32h7xx_it.c ****   */
 302:Core/Src/stm32h7xx_it.c **** void DMA1_Stream6_IRQHandler(void)
 303:Core/Src/stm32h7xx_it.c **** {
 427              		.loc 1 303 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431 0000 08B5     		push	{r3, lr}
 432              	.LCFI7:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 3, -8
 435              		.cfi_offset 14, -4
 304:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */
 305:Core/Src/stm32h7xx_it.c **** 
 306:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 0 */
 307:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi3_rx);
 436              		.loc 1 307 3 view .LVU48
 437 0002 0248     		ldr	r0, .L42
 438 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 439              	.LVL7:
 308:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */
 309:Core/Src/stm32h7xx_it.c **** 
 310:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 1 */
 311:Core/Src/stm32h7xx_it.c **** }
 440              		.loc 1 311 1 is_stmt 0 view .LVU49
 441 0008 08BD     		pop	{r3, pc}
 442              	.L43:
 443 000a 00BF     		.align	2
 444              	.L42:
 445 000c 00000000 		.word	hdma_spi3_rx
 446              		.cfi_endproc
 447              	.LFE365:
 449              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 450              		.align	1
 451              		.global	TIM3_IRQHandler
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu fpv5-d16
 457              	TIM3_IRQHandler:
 458              	.LFB366:
ARM GAS  /tmp/cc1kPWzz.s 			page 14


 312:Core/Src/stm32h7xx_it.c **** 
 313:Core/Src/stm32h7xx_it.c **** /**
 314:Core/Src/stm32h7xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 315:Core/Src/stm32h7xx_it.c ****   */
 316:Core/Src/stm32h7xx_it.c **** void TIM3_IRQHandler(void)
 317:Core/Src/stm32h7xx_it.c **** {
 459              		.loc 1 317 1 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463 0000 08B5     		push	{r3, lr}
 464              	.LCFI8:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 3, -8
 467              		.cfi_offset 14, -4
 318:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 319:Core/Src/stm32h7xx_it.c **** 
 320:Core/Src/stm32h7xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 321:Core/Src/stm32h7xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 468              		.loc 1 321 3 view .LVU51
 469 0002 0248     		ldr	r0, .L46
 470 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 471              	.LVL8:
 322:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 323:Core/Src/stm32h7xx_it.c **** 
 324:Core/Src/stm32h7xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 325:Core/Src/stm32h7xx_it.c **** }
 472              		.loc 1 325 1 is_stmt 0 view .LVU52
 473 0008 08BD     		pop	{r3, pc}
 474              	.L47:
 475 000a 00BF     		.align	2
 476              	.L46:
 477 000c 00000000 		.word	htim3
 478              		.cfi_endproc
 479              	.LFE366:
 481              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 482              		.align	1
 483              		.global	TIM4_IRQHandler
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 487              		.fpu fpv5-d16
 489              	TIM4_IRQHandler:
 490              	.LFB367:
 326:Core/Src/stm32h7xx_it.c **** 
 327:Core/Src/stm32h7xx_it.c **** /**
 328:Core/Src/stm32h7xx_it.c ****   * @brief This function handles TIM4 global interrupt.
 329:Core/Src/stm32h7xx_it.c ****   */
 330:Core/Src/stm32h7xx_it.c **** void TIM4_IRQHandler(void)
 331:Core/Src/stm32h7xx_it.c **** {
 491              		.loc 1 331 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495 0000 08B5     		push	{r3, lr}
 496              	.LCFI9:
 497              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc1kPWzz.s 			page 15


 498              		.cfi_offset 3, -8
 499              		.cfi_offset 14, -4
 332:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 333:Core/Src/stm32h7xx_it.c **** 
 334:Core/Src/stm32h7xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 335:Core/Src/stm32h7xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 500              		.loc 1 335 3 view .LVU54
 501 0002 0248     		ldr	r0, .L50
 502 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 503              	.LVL9:
 336:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 337:Core/Src/stm32h7xx_it.c **** 
 338:Core/Src/stm32h7xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 339:Core/Src/stm32h7xx_it.c **** }
 504              		.loc 1 339 1 is_stmt 0 view .LVU55
 505 0008 08BD     		pop	{r3, pc}
 506              	.L51:
 507 000a 00BF     		.align	2
 508              	.L50:
 509 000c 00000000 		.word	htim4
 510              		.cfi_endproc
 511              	.LFE367:
 513              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 514              		.align	1
 515              		.global	SPI1_IRQHandler
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 519              		.fpu fpv5-d16
 521              	SPI1_IRQHandler:
 522              	.LFB368:
 340:Core/Src/stm32h7xx_it.c **** 
 341:Core/Src/stm32h7xx_it.c **** /**
 342:Core/Src/stm32h7xx_it.c ****   * @brief This function handles SPI1 global interrupt.
 343:Core/Src/stm32h7xx_it.c ****   */
 344:Core/Src/stm32h7xx_it.c **** void SPI1_IRQHandler(void)
 345:Core/Src/stm32h7xx_it.c **** {
 523              		.loc 1 345 1 is_stmt 1 view -0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527 0000 08B5     		push	{r3, lr}
 528              	.LCFI10:
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 3, -8
 531              		.cfi_offset 14, -4
 346:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 347:Core/Src/stm32h7xx_it.c **** 
 348:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SPI1_IRQn 0 */
 349:Core/Src/stm32h7xx_it.c ****   HAL_SPI_IRQHandler(&hspi1);
 532              		.loc 1 349 3 view .LVU57
 533 0002 0248     		ldr	r0, .L54
 534 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 535              	.LVL10:
 350:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 351:Core/Src/stm32h7xx_it.c **** 
 352:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SPI1_IRQn 1 */
ARM GAS  /tmp/cc1kPWzz.s 			page 16


 353:Core/Src/stm32h7xx_it.c **** }
 536              		.loc 1 353 1 is_stmt 0 view .LVU58
 537 0008 08BD     		pop	{r3, pc}
 538              	.L55:
 539 000a 00BF     		.align	2
 540              	.L54:
 541 000c 00000000 		.word	hspi1
 542              		.cfi_endproc
 543              	.LFE368:
 545              		.section	.text.USART1_IRQHandler,"ax",%progbits
 546              		.align	1
 547              		.global	USART1_IRQHandler
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 551              		.fpu fpv5-d16
 553              	USART1_IRQHandler:
 554              	.LFB369:
 354:Core/Src/stm32h7xx_it.c **** 
 355:Core/Src/stm32h7xx_it.c **** /**
 356:Core/Src/stm32h7xx_it.c ****   * @brief This function handles USART1 global interrupt.
 357:Core/Src/stm32h7xx_it.c ****   */
 358:Core/Src/stm32h7xx_it.c **** void USART1_IRQHandler(void)
 359:Core/Src/stm32h7xx_it.c **** {
 555              		.loc 1 359 1 is_stmt 1 view -0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559 0000 08B5     		push	{r3, lr}
 560              	.LCFI11:
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 3, -8
 563              		.cfi_offset 14, -4
 360:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 361:Core/Src/stm32h7xx_it.c **** 
 362:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 363:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 564              		.loc 1 363 3 view .LVU60
 565 0002 0248     		ldr	r0, .L58
 566 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 567              	.LVL11:
 364:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 365:Core/Src/stm32h7xx_it.c **** 
 366:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 367:Core/Src/stm32h7xx_it.c **** }
 568              		.loc 1 367 1 is_stmt 0 view .LVU61
 569 0008 08BD     		pop	{r3, pc}
 570              	.L59:
 571 000a 00BF     		.align	2
 572              	.L58:
 573 000c 00000000 		.word	huart1
 574              		.cfi_endproc
 575              	.LFE369:
 577              		.section	.text.USART3_IRQHandler,"ax",%progbits
 578              		.align	1
 579              		.global	USART3_IRQHandler
 580              		.syntax unified
ARM GAS  /tmp/cc1kPWzz.s 			page 17


 581              		.thumb
 582              		.thumb_func
 583              		.fpu fpv5-d16
 585              	USART3_IRQHandler:
 586              	.LFB370:
 368:Core/Src/stm32h7xx_it.c **** 
 369:Core/Src/stm32h7xx_it.c **** /**
 370:Core/Src/stm32h7xx_it.c ****   * @brief This function handles USART3 global interrupt.
 371:Core/Src/stm32h7xx_it.c ****   */
 372:Core/Src/stm32h7xx_it.c **** void USART3_IRQHandler(void)
 373:Core/Src/stm32h7xx_it.c **** {
 587              		.loc 1 373 1 is_stmt 1 view -0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591 0000 08B5     		push	{r3, lr}
 592              	.LCFI12:
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 3, -8
 595              		.cfi_offset 14, -4
 374:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 375:Core/Src/stm32h7xx_it.c **** 
 376:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 377:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 596              		.loc 1 377 3 view .LVU63
 597 0002 0248     		ldr	r0, .L62
 598 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 599              	.LVL12:
 378:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 379:Core/Src/stm32h7xx_it.c **** 
 380:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 381:Core/Src/stm32h7xx_it.c **** }
 600              		.loc 1 381 1 is_stmt 0 view .LVU64
 601 0008 08BD     		pop	{r3, pc}
 602              	.L63:
 603 000a 00BF     		.align	2
 604              	.L62:
 605 000c 00000000 		.word	huart3
 606              		.cfi_endproc
 607              	.LFE370:
 609              		.section	.text.DMA1_Stream7_IRQHandler,"ax",%progbits
 610              		.align	1
 611              		.global	DMA1_Stream7_IRQHandler
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 615              		.fpu fpv5-d16
 617              	DMA1_Stream7_IRQHandler:
 618              	.LFB371:
 382:Core/Src/stm32h7xx_it.c **** 
 383:Core/Src/stm32h7xx_it.c **** /**
 384:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream7 global interrupt.
 385:Core/Src/stm32h7xx_it.c ****   */
 386:Core/Src/stm32h7xx_it.c **** void DMA1_Stream7_IRQHandler(void)
 387:Core/Src/stm32h7xx_it.c **** {
 619              		.loc 1 387 1 is_stmt 1 view -0
 620              		.cfi_startproc
ARM GAS  /tmp/cc1kPWzz.s 			page 18


 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623 0000 08B5     		push	{r3, lr}
 624              	.LCFI13:
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 3, -8
 627              		.cfi_offset 14, -4
 388:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream7_IRQn 0 */
 389:Core/Src/stm32h7xx_it.c **** 
 390:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream7_IRQn 0 */
 391:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi3_tx);
 628              		.loc 1 391 3 view .LVU66
 629 0002 0248     		ldr	r0, .L66
 630 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 631              	.LVL13:
 392:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream7_IRQn 1 */
 393:Core/Src/stm32h7xx_it.c **** 
 394:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream7_IRQn 1 */
 395:Core/Src/stm32h7xx_it.c **** }
 632              		.loc 1 395 1 is_stmt 0 view .LVU67
 633 0008 08BD     		pop	{r3, pc}
 634              	.L67:
 635 000a 00BF     		.align	2
 636              	.L66:
 637 000c 00000000 		.word	hdma_spi3_tx
 638              		.cfi_endproc
 639              	.LFE371:
 641              		.section	.text.SPI3_IRQHandler,"ax",%progbits
 642              		.align	1
 643              		.global	SPI3_IRQHandler
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 647              		.fpu fpv5-d16
 649              	SPI3_IRQHandler:
 650              	.LFB372:
 396:Core/Src/stm32h7xx_it.c **** 
 397:Core/Src/stm32h7xx_it.c **** /**
 398:Core/Src/stm32h7xx_it.c ****   * @brief This function handles SPI3 global interrupt.
 399:Core/Src/stm32h7xx_it.c ****   */
 400:Core/Src/stm32h7xx_it.c **** void SPI3_IRQHandler(void)
 401:Core/Src/stm32h7xx_it.c **** {
 651              		.loc 1 401 1 is_stmt 1 view -0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655 0000 08B5     		push	{r3, lr}
 656              	.LCFI14:
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 3, -8
 659              		.cfi_offset 14, -4
 402:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SPI3_IRQn 0 */
 403:Core/Src/stm32h7xx_it.c **** 
 404:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SPI3_IRQn 0 */
 405:Core/Src/stm32h7xx_it.c ****   HAL_SPI_IRQHandler(&hspi3);
 660              		.loc 1 405 3 view .LVU69
 661 0002 0248     		ldr	r0, .L70
ARM GAS  /tmp/cc1kPWzz.s 			page 19


 662 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 663              	.LVL14:
 406:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SPI3_IRQn 1 */
 407:Core/Src/stm32h7xx_it.c **** 
 408:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SPI3_IRQn 1 */
 409:Core/Src/stm32h7xx_it.c **** }
 664              		.loc 1 409 1 is_stmt 0 view .LVU70
 665 0008 08BD     		pop	{r3, pc}
 666              	.L71:
 667 000a 00BF     		.align	2
 668              	.L70:
 669 000c 00000000 		.word	hspi3
 670              		.cfi_endproc
 671              	.LFE372:
 673              		.text
 674              	.Letext0:
 675              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 676              		.file 3 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 677              		.file 4 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 678              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 679              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 680              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 681              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 682              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/cc1kPWzz.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_it.c
     /tmp/cc1kPWzz.s:17     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc1kPWzz.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc1kPWzz.s:43     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc1kPWzz.s:50     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc1kPWzz.s:67     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc1kPWzz.s:74     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc1kPWzz.s:91     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc1kPWzz.s:98     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc1kPWzz.s:115    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc1kPWzz.s:122    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc1kPWzz.s:139    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc1kPWzz.s:146    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc1kPWzz.s:159    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc1kPWzz.s:166    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc1kPWzz.s:179    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc1kPWzz.s:186    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc1kPWzz.s:199    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc1kPWzz.s:206    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc1kPWzz.s:226    .text.DMA1_Stream0_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:233    .text.DMA1_Stream0_IRQHandler:0000000000000000 DMA1_Stream0_IRQHandler
     /tmp/cc1kPWzz.s:253    .text.DMA1_Stream0_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:258    .text.DMA1_Stream1_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:265    .text.DMA1_Stream1_IRQHandler:0000000000000000 DMA1_Stream1_IRQHandler
     /tmp/cc1kPWzz.s:285    .text.DMA1_Stream1_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:290    .text.DMA1_Stream2_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:297    .text.DMA1_Stream2_IRQHandler:0000000000000000 DMA1_Stream2_IRQHandler
     /tmp/cc1kPWzz.s:317    .text.DMA1_Stream2_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:322    .text.DMA1_Stream3_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:329    .text.DMA1_Stream3_IRQHandler:0000000000000000 DMA1_Stream3_IRQHandler
     /tmp/cc1kPWzz.s:349    .text.DMA1_Stream3_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:354    .text.DMA1_Stream4_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:361    .text.DMA1_Stream4_IRQHandler:0000000000000000 DMA1_Stream4_IRQHandler
     /tmp/cc1kPWzz.s:381    .text.DMA1_Stream4_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:386    .text.DMA1_Stream5_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:393    .text.DMA1_Stream5_IRQHandler:0000000000000000 DMA1_Stream5_IRQHandler
     /tmp/cc1kPWzz.s:413    .text.DMA1_Stream5_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:418    .text.DMA1_Stream6_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:425    .text.DMA1_Stream6_IRQHandler:0000000000000000 DMA1_Stream6_IRQHandler
     /tmp/cc1kPWzz.s:445    .text.DMA1_Stream6_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:450    .text.TIM3_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:457    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
     /tmp/cc1kPWzz.s:477    .text.TIM3_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:482    .text.TIM4_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:489    .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
     /tmp/cc1kPWzz.s:509    .text.TIM4_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:514    .text.SPI1_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:521    .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
     /tmp/cc1kPWzz.s:541    .text.SPI1_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:546    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:553    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/cc1kPWzz.s:573    .text.USART1_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:578    .text.USART3_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:585    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
     /tmp/cc1kPWzz.s:605    .text.USART3_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:610    .text.DMA1_Stream7_IRQHandler:0000000000000000 $t
ARM GAS  /tmp/cc1kPWzz.s 			page 21


     /tmp/cc1kPWzz.s:617    .text.DMA1_Stream7_IRQHandler:0000000000000000 DMA1_Stream7_IRQHandler
     /tmp/cc1kPWzz.s:637    .text.DMA1_Stream7_IRQHandler:000000000000000c $d
     /tmp/cc1kPWzz.s:642    .text.SPI3_IRQHandler:0000000000000000 $t
     /tmp/cc1kPWzz.s:649    .text.SPI3_IRQHandler:0000000000000000 SPI3_IRQHandler
     /tmp/cc1kPWzz.s:669    .text.SPI3_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart1_rx
hdma_usart1_tx
hdma_spi1_rx
hdma_spi1_tx
hdma_i2c1_rx
hdma_i2c1_tx
hdma_spi3_rx
HAL_TIM_IRQHandler
htim3
htim4
HAL_SPI_IRQHandler
hspi1
HAL_UART_IRQHandler
huart1
huart3
hdma_spi3_tx
hspi3
